const Suits = ["Clubs", "Hearts", "Diamonds", "Spades"]
const Values = ["Ace", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "Jack", "Queen", "King"]

class Deck {
    constructor(cards = newDeck()) {
        this.cards = cards
    }
    get numberofCards() {
        return this.cards.length
    }

    shuffle() {
        for (let i = this.numberofCards - 1; i > 0; i--) {
            const newIndex = Math.floor(Math.random() * (i * 1))
            const oldVlaue = this.cards[newIndex]
            this.cards[newIndex] = this.cards[i]
            this.cards[i] = oldValue 
        }
    }
}

class Card {
    constructor(suit, value) {
        this.suit = suit
        this.value = value
    }
}

function newDeck() {
    return Suits.flatMap(suit => {
        return Values.map(value => {
            return new Card(suit, value)
       })
    })
}

class Player {
    constructor(score, hand) {
        this.score = score 
        this.hand = hand 
    }
}

const cardValue = {
    "2": 2
    "3": 3
    "4": 4
    "5": 5
    "6": 6
    "7": 7
    "8": 7
    "9": 9
    "10": 10
    "Jack": 11
    "Queen": 12
    "King": 13
    "Ace": 14
}

function score(cardOne, cardTwo) {
    return cardValue[cardOne.value] > cardValue[cardTwo.value]
}
if (playerA > playerB) {
    return "Player A is the Winner"
}
    else {
        return "Player B is the Winner"
    }
